# Load required libraries
library(shiny)
library(shinydashboard)
library(ggplot2)
library(dplyr)
library(lubridate)

# Calculate statistics
total_artworks <- as.character(nrow(artworks))
multiple_artists_count <- artworks %>% filter(SingleArtist == FALSE) %>% pull(nrow(.))
multiple_artists_percentage <- round((multiple_artists_count / as.numeric(total_artworks)) * 100, 1)

# UI
ui <- dashboardPage(
  dashboardHeader(title = "MoMA Artworks Dashboard"),
  dashboardSidebar(disable = TRUE),  # No sidebar
  dashboardBody(
    fluidRow(
      valueBox(total_artworks, "Total Artworks", icon = icon("paint-brush"), color = "blue"),
      valueBox(paste0(multiple_artists_percentage, "%"), "Artworks by Multiple Artists", icon = icon("palette"), color = "light-blue")
    ),
    
    fluidRow(
      box(plotOutput("artworks_over_time"), width = 6),
      box(plotOutput("top_artists"), width = 6)
    ),
    
    fluidRow(
      box(plotOutput("acquisition_by_month"), width = 6),
      box(plotOutput("acquisition_by_decade"), width = 6)
    )
  )
)

# Server
server <- function(input, output) {
  
  # üìä Artworks Created Over Time
  output$artworks_over_time <- renderPlot({
    ggplot(artworks %>% filter(DateCreated >= 1800), aes(x = DateCreated)) +
      geom_histogram(fill = "steelblue", color = "black", bins = 30) +
      labs(title = "Artworks Created Over Time",
           x = "Date Created", y = "Number of Artworks") +
      theme_minimal()
  })
  
  # üèÜ Top 10 Artists with Most Artworks
  output$top_artists <- renderPlot({
    top_artists <- artworks %>%
      count(Artist, sort = TRUE) %>%
      head(10) %>%
      mutate(percent = round(n / total_artworks * 100, 1))
    
    ggplot(top_artists, aes(x = reorder(Artist, n), y = n)) +
      geom_col(fill = "skyblue", alpha = 0.7) +
      geom_text(aes(label = paste0(percent, "%")), vjust = 0.5, hjust = -0.1, size = 5) +
      coord_flip() +
      labs(title = "Top 10 Artists with Most Artworks", x = "Artist", y = "Number of Artworks") +
      theme_minimal()
  })
  
  # üìÖ Trends in Date of Acquisition by Month
  output$acquisition_by_month <- renderPlot({
    month_data <- artworks %>% 
      filter(!is.na(DateAcquired)) %>% 
      group_by(Month = month(DateAcquired)) %>%
      summarise(count = n()) 
    
    ggplot(month_data, aes(x = Month, y = count)) +
      geom_col(fill = "steelblue", alpha = 0.7) +
      geom_line(group = 1, color = "blue", size = 1) +
      scale_x_continuous(breaks = 1:12, labels = month.abb) +
      labs(title = "Trends in Date of Acquisition by Month",
           x = "Month", y = "Number of Artworks") +
      theme_minimal()
  })
  
  # ‚è≥ Artworks Acquired by MoMA Over Time (by Decades)
  output$acquisition_by_decade <- renderPlot({
    decade_data <- artworks %>% 
      filter(!is.na(DateAcquired)) %>% 
      group_by(Year = floor(as.numeric(year(DateAcquired)) / 10) * 10) %>%
      summarise(count = n()) 
    
    ggplot(decade_data, aes(x = Year, y = count)) +
      geom_col(fill = "skyblue", alpha = 0.7) +
      geom_line(group = 1, color = "steelblue", size = 1) +
      scale_x_continuous(breaks = seq(1900, 2020, 10), labels = function(x) paste0(x, "s")) +
      labs(title = "Artworks Acquired by MoMA Over Time (by Decades)",
           x = "Decade Acquired", y = "Number of Artworks") +
      theme_minimal()
  })
}

# Run the app
shinyApp(ui, server)
